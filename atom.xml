<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>skyJC</title>
  <subtitle>Android探索的道路，是否愿意陪我一起？</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.jincanshen.com/"/>
  <updated>2016-08-24T10:58:13.000Z</updated>
  <id>http://www.jincanshen.com/</id>
  
  <author>
    <name>skyJC</name>
    <email>jincan0213@hotmail.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Sky架构</title>
    <link href="http://www.jincanshen.com/2016/08/23/Sky%E6%9E%B6%E6%9E%84/"/>
    <id>http://www.jincanshen.com/2016/08/23/Sky架构/</id>
    <published>2016-08-23T04:15:32.000Z</published>
    <updated>2016-08-24T10:58:13.000Z</updated>
    
    <content type="html"><![CDATA[<p>无论MVC或是MVP模式都不可避免地存在一个弊端：<br><code>额外的代码复杂度及学习成本</code></p>
<a id="more"></a>
<h2 id="MVP和MVC"><a href="#MVP和MVC" class="headerlink" title="MVP和MVC"></a>MVP和MVC</h2><p>无论MVC或是MVP模式都不可避免地存在一个弊端：<br><code>额外的代码复杂度及学习成本</code></p>
<h3 id="MVC"><a href="#MVC" class="headerlink" title="MVC"></a>MVC</h3><pre><code>1、View接受用户的交互请求
2、View将请求转交给Controller
3、Controller操作Model进行数据更新
4、数据更新之后，Model通知View数据变化
5、View显示更新之后的数据
</code></pre><p><img src="https://skyJinc.github.io/images/sky架构/2.png" alt="图1"></p>
<h3 id="MVP"><a href="#MVP" class="headerlink" title="MVP"></a>MVP</h3><pre><code>1、View接受用户的交互请求
2、View将请求转交给Presenter
3、Presenter操作Model进行数据库更新
4、数据更新之后，Model通知Presenter数据发生变化
5、Presenter更新View的数据
</code></pre><p><img src="https://skyJinc.github.io/images/sky架构/3.png" alt="图1"></p>
<p>说明：presenter  我这里说要用biz(business)代替</p>
<h2 id="Sky开发架构-MVP模式"><a href="#Sky开发架构-MVP模式" class="headerlink" title="Sky开发架构-MVP模式"></a>Sky开发架构-MVP模式</h2><p>开头已经说了，无论MVC或是MVP模式都不可避免地存在一个弊端：<code>额外的代码复杂度及学习成本</code>  </p>
<p>Sky开发架构都优化了那些问题</p>
<h3 id="第一个"><a href="#第一个" class="headerlink" title="第一个"></a>第一个</h3><p>因为通过接口交互，所以每一个View(Activity,Fragment,DialogFragment…) 都会多一个IView接口，一个IBiz和实现类Biz.</p>
<p>以Activity为例, 文件数量从1个变成了4个.<br><img src="https://skyJinc.github.io/images/sky架构/4.png" alt="图1"></p>
<p>Sky架构做了调整，采用一个Java文件  包含 接口 和 类</p>
<p><img src="https://skyJinc.github.io/images/sky架构/5.png" alt="图1"></p>
<p>这里要说到Java文件的限制，一个类文件只能有一个<strong><em>public class</em></strong> 而Activity在AndroidManifest里必须是public，所以业务接口(IBiz)可以声明成public，而Activity不可以</p>
<p>Biz<br><img src="https://skyJinc.github.io/images/sky架构/6.png" alt="图1"></p>
<p>Activity<br><img src="https://skyJinc.github.io/images/sky架构/7.png" alt="图1"></p>
<h3 id="第二个"><a href="#第二个" class="headerlink" title="第二个"></a>第二个</h3><p>activity 和 biz 依赖的问题</p>
<p>正常的依赖关系<br>Activity<br><img src="https://skyJinc.github.io/images/sky架构/8.png" alt="图1"><br>Biz<br><img src="https://skyJinc.github.io/images/sky架构/11.png" alt="图1"></p>
<p>Sky架构做了调整，采用泛型+注解方式依赖</p>
<p>Activity<br><img src="https://skyJinc.github.io/images/sky架构/9.png" alt="图1"></p>
<p>Biz<br><img src="https://skyJinc.github.io/images/sky架构/10.png" alt="图1"></p>
<h4 id="Impl-注解"><a href="#Impl-注解" class="headerlink" title="@Impl  注解"></a>@Impl  注解</h4><p>可以看到Activity接口和Biz接口中都注解了@Impl(实现类.class)</p>
<p>顾名思义,表示接口的实现类。</p>
<p>主要是为了能方便的统一管理实现类</p>
<p>主要是指定接口的实现类</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;无论MVC或是MVP模式都不可避免地存在一个弊端：&lt;br&gt;&lt;code&gt;额外的代码复杂度及学习成本&lt;/code&gt;&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Mac + Jenkins + Gradle + Git = 可持续集成架构搭建</title>
    <link href="http://www.jincanshen.com/2016/08/22/%E5%8F%AF%E6%8C%81%E7%BB%AD%E9%9B%86%E6%88%90/"/>
    <id>http://www.jincanshen.com/2016/08/22/可持续集成/</id>
    <published>2016-08-22T02:45:26.000Z</published>
    <updated>2016-08-22T11:57:48.000Z</updated>
    
    <content type="html"><![CDATA[<p>简化打包流程…</p>
<a id="more"></a>
<h3 id="Tomact"><a href="#Tomact" class="headerlink" title="Tomact"></a>Tomact</h3><p><a href="http://tomcat.apache.org/" target="_blank" rel="external">下载地址</a></p>
<p>Mac 记得下载.gz</p>
<p>为了方便 我设置了环境变量</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">mac 命令</div><div class="line">1.vim .bash_profile</div><div class="line">2.export PATH=$&#123;PATH&#125;:你的路径/apache-tomcat-9.0.0/bin</div><div class="line">3.保存退出 :wq</div><div class="line">4.生效 source .bash_profile</div><div class="line">5.启动 startup.sh</div></pre></td></tr></table></figure>
<p><a href="http://localhost:8080" target="_blank" rel="external">查看Tomcat是否启动</a></p>
<h3 id="Jenkins安装"><a href="#Jenkins安装" class="headerlink" title="Jenkins安装"></a>Jenkins安装</h3><p><a href="http://mirrors.jenkins-ci.org/war/latest/jenkins.war" target="_blank" rel="external">下载地址</a></p>
<p>将下载的jenkins.war包直接放到tomcat下的webapps目录，启动tomcat即可安装完成</p>
<p><a href="http://localhost:8080/jenkins/" target="_blank" rel="external">查看Jenins</a></p>
<p>如果显示一下内容<br><img src="https://skyJinc.github.io/images/jenkins/1.png" alt="图1"></p>
<p>按照提示我们执行mac命令 <code>cat /var/lib/jenkins/secrets/initialAdminPassword</code> 得到Administrator password，输入后点击Continue，如下：<br><img src="https://skyJinc.github.io/images/jenkins/4.png" alt="图"><br>剩下的等 安装好插件就好～</p>
<h3 id="Jenkins设置"><a href="#Jenkins设置" class="headerlink" title="Jenkins设置"></a>Jenkins设置</h3><h4 id="系统设置-gt-SDK"><a href="#系统设置-gt-SDK" class="headerlink" title="系统设置 -&gt; SDK"></a>系统设置 -&gt; SDK</h4><p><img src="https://skyJinc.github.io/images/jenkins/3.png" alt="图"></p>
<h4 id="管理插件-安装插件"><a href="#管理插件-安装插件" class="headerlink" title="管理插件 - 安装插件"></a>管理插件 - 安装插件</h4><p><img src="https://skyJinc.github.io/images/jenkins/6.png" alt="图"></p>
<h4 id="编辑插件内容"><a href="#编辑插件内容" class="headerlink" title="编辑插件内容"></a>编辑插件内容</h4><p><img src="https://skyJinc.github.io/images/jenkins/7.png" alt="图"></p>
<h3 id="开始构建"><a href="#开始构建" class="headerlink" title="开始构建"></a>开始构建</h3><h4 id="1-新建"><a href="#1-新建" class="headerlink" title="1.新建"></a>1.新建</h4><p><img src="https://skyJinc.github.io/images/jenkins/8.png" alt="图"></p>
<h4 id="2-设置参数"><a href="#2-设置参数" class="headerlink" title="2.设置参数"></a>2.设置参数</h4><p><img src="https://skyJinc.github.io/images/jenkins/9.png" alt="图"></p>
<h4 id="3-设置源码"><a href="#3-设置源码" class="headerlink" title="3.设置源码"></a>3.设置源码</h4><p>说明：这里我主要是用了github和SSH密钥，如果使用svn 或者 git 账号和密码方式，自行增加，不会的留言提问哈。。<br><img src="https://skyJinc.github.io/images/jenkins/10.png" alt="图"></p>
<h4 id="4-设置源码"><a href="#4-设置源码" class="headerlink" title="4.设置源码"></a>4.设置源码</h4><p><img src="https://skyJinc.github.io/images/jenkins/11.png" alt="图"></p>
<h4 id="5-输出内容过滤"><a href="#5-输出内容过滤" class="headerlink" title="5.输出内容过滤"></a>5.输出内容过滤</h4><p><img src="https://skyJinc.github.io/images/jenkins/12.png" alt="图"></p>
<h4 id="6-开始构建"><a href="#6-开始构建" class="headerlink" title="6.开始构建"></a>6.开始构建</h4><p><img src="https://skyJinc.github.io/images/jenkins/13.png" alt="图1"></p>
<h4 id="7-查看构建内容"><a href="#7-查看构建内容" class="headerlink" title="7.查看构建内容"></a>7.查看构建内容</h4><p><img src="https://skyJinc.github.io/images/jenkins/14.png" alt="图1"></p>
<h3 id="待更新"><a href="#待更新" class="headerlink" title="待更新"></a>待更新</h3><p>1.多渠道打包配置 -（使用python 往APK添加渠道文件）<br>2.svn 构建配置<br>3.构建成功后发送邮件配置</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;简化打包流程…&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Android的大神们</title>
    <link href="http://www.jincanshen.com/2016/08/20/Android%E7%9A%84%E5%A4%A7%E7%A5%9E%E4%BB%AC/"/>
    <id>http://www.jincanshen.com/2016/08/20/Android的大神们/</id>
    <published>2016-08-20T08:45:00.000Z</published>
    <updated>2016-08-20T09:39:17.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Google"><a href="#Google" class="headerlink" title="Google"></a><a href="https://github.com/google" target="_blank" rel="external">Google</a></h3><p><img src="https://avatars0.githubusercontent.com/u/1342004?v=3&amp;s=188" alt="">  </p>
<p>google在github上面开源了很多android库应用，尤其是<a href="https://github.com/googlesamples" target="_blank" rel="external">googleSamples</a>,展示了Android最新的示例。</p>
<a id="more"></a>
<h3 id="Jake-Wharton"><a href="#Jake-Wharton" class="headerlink" title="Jake Wharton"></a><a href="https://github.com/JakeWharton" target="_blank" rel="external">Jake Wharton</a></h3><p><img src="https://avatars0.githubusercontent.com/u/66577?v=3&amp;s=188" alt="">  </p>
<p>就职于Square,Andriod大神(Android开发，必定认识此君).擅长Android版本兼容，<a href="https://github.com/JakeWharton/ActionBarSherlock" target="_blank" rel="external">ActionBarSherlock</a>,<a href="https://github.com/JakeWharton/NineOldAndroids" target="_blank" rel="external">NineOldAndroids</a>都已经被收录到android库中。而且参与了很多其他开源项目，非常活跃。</p>
<p><strong>masterpiece</strong>:  </p>
<ul>
<li><a href="https://github.com/JakeWharton/ActionBarSherlock" target="_blank" rel="external">ActionBarSherlock</a> <br></li>
<li><a href="https://github.com/JakeWharton/NineOldAndroids" target="_blank" rel="external">NineOldAndroids</a><br></li>
<li><a href="https://github.com/JakeWharton/ViewPagerIndicator" target="_blank" rel="external">ViewPagerIndicator</a><br></li>
<li><a href="https://github.com/JakeWharton/butterknife" target="_blank" rel="external">butterknife</a><br></li>
<li><a href="https://github.com/JakeWharton/DiskLruCache" target="_blank" rel="external">DiskLruCache</a><br></li>
<li><a href="https://github.com/JakeWharton/u2020" target="_blank" rel="external">u2020</a><br></li>
<li><a href="https://github.com/JakeWharton/RxBinding" target="_blank" rel="external">RxBinding</a><br></li>
<li><a href="https://github.com/JakeWharton/pidcat" target="_blank" rel="external">pidcat</a><br><br>…</li>
</ul>
<h3 id="Chris-Banes"><a href="#Chris-Banes" class="headerlink" title="Chris Banes"></a><a href="https://github.com/chrisbanes" target="_blank" rel="external">Chris Banes</a></h3><p><img src="https://avatars1.githubusercontent.com/u/227486?v=3&amp;s=188" alt="">  </p>
<p>目前就职于Google,和Jake Wharton遥相呼应，对开源项目贡献也很多。很多项目都是精品，并且紧跟潮流，<a href="https://github.com/chrisbanes/cheesesquare" target="_blank" rel="external">cheesesquare</a>就是Android Design library最新的demo.</p>
<p><strong>masterpiece</strong>:  </p>
<ul>
<li><a href="https://github.com/chrisbanes/Android-PullToRefresh" target="_blank" rel="external">Android-PullToRefresh</a> <br></li>
<li><a href="https://github.com/chrisbanes/ActionBar-PullToRefresh" target="_blank" rel="external">ActionBar-PullToRefresh</a> <br></li>
<li><a href="https://github.com/chrisbanes/PhotoView" target="_blank" rel="external">PhotoView</a> <br></li>
<li><a href="https://github.com/chrisbanes/cheesesquare" target="_blank" rel="external">cheesesquare</a> <br></li>
<li><a href="https://github.com/chrisbanes/philm" target="_blank" rel="external">philm</a> <br></li>
<li><a href="https://github.com/chrisbanes/gradle-mvn-push" target="_blank" rel="external">gradle-mvn-push</a> <br></li>
<li><a href="https://github.com/chrisbanes/photup" target="_blank" rel="external">photup</a> <br><br>…</li>
</ul>
<h3 id="Mark-Murphy"><a href="#Mark-Murphy" class="headerlink" title="Mark Murphy"></a><a href="https://github.com/commonsguy" target="_blank" rel="external">Mark Murphy</a></h3><p><img src="https://avatars0.githubusercontent.com/u/103772?v=3&amp;s=188" alt=""></p>
<p>与前两位相比，Mark Murphy则是专注于写了一本<a href="https://commonsware.com/Android/" target="_blank" rel="external">The Busy Coder’s Guide to Android Development</a>,全面介绍了Android.而且在开源项目也贡献很多。</p>
<p><strong>masterpiece</strong>:  </p>
<ul>
<li><a href="https://github.com/commonsguy/cw-omnibus" target="_blank" rel="external">cw-omnibus</a></li>
<li><a href="https://github.com/commonsguy/cw-advandroid" target="_blank" rel="external">cw-advandroid</a>  </li>
<li><a href="https://github.com/commonsguy/cw-android" target="_blank" rel="external">cw-android</a>  </li>
<li><a href="https://github.com/commonsguy/cwac-camera" target="_blank" rel="external">cwac-camera</a><br>…</li>
</ul>
<h3 id="Sergey-Tarasevich"><a href="#Sergey-Tarasevich" class="headerlink" title="Sergey Tarasevich"></a><a href="https://github.com/nostra13" target="_blank" rel="external">Sergey Tarasevich</a></h3><p><img src="https://avatars3.githubusercontent.com/u/1223348?v=3&amp;s=188" alt=""></p>
<p>这位大神大家可能不熟悉，不过他的<a href="https://github.com/nostra13/Android-Universal-Image-Loader" target="_blank" rel="external">UIL</a>图片缓存和加载框架再熟悉不过了。<br>目前这个库还是很活跃，一直在进步。</p>
<p><strong>masterpiece</strong>:  </p>
<ul>
<li><a href="https://github.com/nostra13/Android-Universal-Image-Loader" target="_blank" rel="external">Android-Universal-Image-Loader</a></li>
</ul>
<h3 id="Koushik-Dutta"><a href="#Koushik-Dutta" class="headerlink" title="Koushik Dutta"></a><a href="https://github.com/koush" target="_blank" rel="external">Koushik Dutta</a></h3><p><img src="https://avatars3.githubusercontent.com/u/73924?v=3&amp;s=188" alt=""></p>
<p>就职于ClockworkMod，这位大神也有个图片加载框架，还包含了异步网络请求,<a href="https://github.com/koush/ion" target="_blank" rel="external">ion</a>。</p>
<blockquote>
<p>另外对<a href="https://github.com/CyanogenMod" target="_blank" rel="external">https://github.com/CyanogenMod</a> 的开源项目有很多贡献<br>from <a href="https://github.com/Trinea/android-open-project" target="_blank" rel="external">https://github.com/Trinea/android-open-project</a></p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;Google&quot;&gt;&lt;a href=&quot;#Google&quot; class=&quot;headerlink&quot; title=&quot;Google&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/google&quot;&gt;Google&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/1342004?v=3&amp;amp;s=188&quot; alt=&quot;&quot;&gt;  &lt;/p&gt;
&lt;p&gt;google在github上面开源了很多android库应用，尤其是&lt;a href=&quot;https://github.com/googlesamples&quot;&gt;googleSamples&lt;/a&gt;,展示了Android最新的示例。&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
</feed>
